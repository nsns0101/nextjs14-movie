{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"8893b62d59d308c9-LAX","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Sat, 25 May 2024 07:11:28 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=jvPkhS5uRz2BbV68MwmTR8gmSU9zAA4X%2BAUkAZeWCq%2FKWxafVF3ysiJtwm3c4THykrQ2Ji9%2BVUzP%2BwztUD6eU9I%2BZ%2BM1JJXkjwcShO3wi3AXcwKHfqz5e67Q3try89g11C74Xd7rWF7KSheRRyE37EzFLnUy8jk%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies"},"revalidate":31536000,"tags":[]}